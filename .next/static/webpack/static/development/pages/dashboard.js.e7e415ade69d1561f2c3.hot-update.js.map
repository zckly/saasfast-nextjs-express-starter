{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.e7e415ade69d1561f2c3.hot-update.js","sources":["webpack:///./pages/dashboard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport SecureTemplate from '../static/secure-template';\nimport Router from 'next/router'\nimport Link from 'next/link'\nimport {domain} from '../settings';\nimport { Grid, Card, Button, Image, Modal } from 'semantic-ui-react'\nfunction titleCase(str) {\n  return str.toLowerCase().split(' ').map(function(word) {\n    return word.replace(word[0], word[0].toUpperCase());\n  }).join(' ');\n}\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newQuery: '',\n      data: [],\n      open: false\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.submitNewQuery = this.submitNewQuery.bind(this)\n    this.turnOnAlert = this.turnOnAlert.bind(this)\n    this.turnOffAlert = this.turnOffAlert.bind(this)\n\n  }\n  componentDidMount() {\n    if (this.props.isLoggedIn) {\n      fetch(domain + '/fetch_dashboard', {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: \"POST\",\n          body: JSON.stringify({user:this.props.loggedInUser})\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data['success']) {\n          this.setState({data: data['data']})\n        } else {\n          this.setState({data: []})\n        }\n      })\n    }\n    \n  }\n  handleKeyPress = (evt) => {\n    if (evt.key === 'Enter') {\n      this.submitNewQuery(evt)\n    }\n  }\n  handleChange (evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n  submitNewQuery (evt) {\n    evt.preventDefault()\n    if (this.state.newQuery.length) {\n      Router.push(`/checkout?q=${this.state.newQuery}`, `/checkout/${this.state.newQuery}`)\n    } else {\n\n    }\n  }\n  open = () => this.setState({ open: true })\n  close = () => this.setState({ open: false })\n  turnOnAlert (id) {\n    console.log(id)\n    fetch(domain + '/queries/activate', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({query_id:id, user:this.props.loggedInUser})\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data['success']) {\n        this.setState({data: data['data'], open: false})\n      } else {\n        console.log('error when activating query!')\n        this.setState({ open: false })\n      }\n    })\n  }\n  turnOffAlert (id) {\n    console.log(id)\n    fetch(domain + '/queries/deactivate', {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({query_id:id, user:this.props.loggedInUser})\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data['success']) {\n        this.setState({data: data['data'], open: false})\n      } else {\n        console.log('error when deactivating query!')\n        this.setState({ open: false })\n      }\n    })\n  }\n  render() {\n    const {open, data} = this.state\n    var items = []\n    for (var i = 0; i < data.length; i++) {\n      (function(that, i) {\n        let x = data[i]\n        items.push(\n        <Grid.Column key={x._id} >\n          <Card href={x.recent_results.length ? x.recent_results[0]['listing_link'] : ''}>\n            <Card.Content>\n              <Image size='mini' floated='left' src={x.recent_results.length ? x.recent_results[0].image_link : 'http://react.semantic-ui.com/images/wireframe/image.png'} />\n              <Card.Header>{titleCase(x.searchQuery)}</Card.Header>\n              <Card.Meta>Last item found</Card.Meta>\n              <Card.Description>\n                <h3>{x.recent_results.length ? x.recent_results[0]['name'] : ''}</h3>\n                {x.recent_results.length ? (\n                  <div>\n                    <h4>\n                    {~x.recent_results[0].new_price ? '$' + x.recent_results[0].new_price : '$' + x.recent_results[0].original_price}\n                    </h4>\n                    <br />\n                    <h5>\n                    {'Found on ' + x.recent_results[0].source}\n                    </h5>\n                  </div>) : (<div><h3>No searches yet!</h3><br/><br/><br/><br/><br/>\n                </div>)}\n            </Card.Description>\n            </Card.Content>\n\n          </Card>\n        </Grid.Column>\n      )\n      })(this, i);\n    }\n    \n    return (\n      <div className=\"dashboard-page\">\n        \n        <input className=\"input-field\" id='newQuery' onKeyPress={this.handleKeyPress} onChange={this.handleChange} type=\"text\" name=\"newQuery\" value={this.state.newQuery} placeholder=\"Raf Simons Closer Parka\" /> \n        <br />\n        <div className=\"newQueryButton button\" onClick={this.submitNewQuery}>\n          <span className=\"button__mask\" />\n          <span className=\"button__text\" id=\"query_button\">Monitor Item</span>\n          <span className=\"button__text button__text--bis\">+</span>\n        </div>\n        <div className='table'>\n          <Grid stackable relaxed columns={3}>\n            {items}  \n          </Grid>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SecureTemplate(Dashboard);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmCA;AACA;AACA;AACA;AACA;AAvCA;AAkDA;AAAA;AAAA;AAAA;AACA;AAnDA;AAmDA;AAAA;AAAA;AAAA;AACA;AAlDA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAVA;AAYA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AANA;AAQA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;AAMA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;;;;AAjJA;AACA;AAmJA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}